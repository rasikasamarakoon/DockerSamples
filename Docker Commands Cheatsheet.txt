docker --version - displays docker version
docker info - displays info ex: no of containers, images etc.
docker images – lists all Docker images on your machine
docker ps – lists all running Docker containers on your machine
docker ps -a – lists all the attached but not running containers
docker --help – Docker help (no s..t Sherlock)
docker logs <container_name> – outputs the container logs (useful when running the container in a detached mode for example)
docker events – outputs the events that happen on the server, depending on the Docker object (attach, detach, copy, pull…)
docker stop <container_name> – stops the container by name
docker rm <container_name> – removes the container by name
docker rmi <image_id> – removes the image
docker rmi $(docker images -q -f dangling=true) -- force – this one is particularly interesting, removes all the images that are not tagged (<none>)
docker rm $(docker ps -a -q) – removes all containers
docker rmi -f $(docker images -a -q) – removes all images
docker build -t "asdrasika/RasikaDockerSample:v1" . - Build docker image
docker login - login to registry
docker push asdrasika/rasikadockersample:v1 - push to registry(need to tag image before being able to push)
docker inspect --format '{{ .NetworkSettings.Networks.nat.IPAddress }}' web - find the ip address of a container
docker network ls - list netwroks
docker network rm NETWORK <>
docker exec -ti dockerimage_dockersample_1 ping db

docker build -t friendlyhello .  # Create image using this directory's Dockerfile
docker run -p 4000:80 friendlyhello  # Run "friendlyname" mapping port 4000 to 80
docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode
docker container ls                                # List all running containers
docker container ls -a             # List all containers, even those not running
docker container stop <hash>           # Gracefully stop the specified container
docker container kill <hash>         # Force shutdown of the specified container
docker container rm <hash>        # Remove specified container from this machine
docker container rm $(docker container ls -a -q)         # Remove all containers
docker image ls -a                             # List all images on this machine
docker image rm <image id>            # Remove specified image from this machine
docker image rm $(docker image ls -a -q)   # Remove all images from this machine
docker login             # Log in this CLI session using your Docker credentials
docker tag <image> username/repository:tag  # Tag <image> for upload to registry
docker push username/repository:tag            # Upload tagged image to registry
docker run username/repository:tag                   # Run image from a registry